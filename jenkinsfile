node {
   stage('Preparation') {
      // Récupérer l'application depuis GitHub
      git 'https://github.com/brahimhamdi/projet-java.git'
      // Récupérer l'outil Maven pour la compilation.
      // M3 doit être configurée da/ configuration globale des outils           
      mvnHome = tool 'M3'
   }
   stage('Compilation'){
      // Lancer la compilation par Maven
      withEnv(["MVN_HOME=$mvnHome"]) {
      // Si compilation sous Unix/Linux
         if (isUnix()) {
            sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
      // Si compilation sous Windows
         } else {
            bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
         }
      }
   }
   stage('Test') {
       // Faire un test unitaire avec l'outil JUnit
      junit '**/target/surefire-reports/TEST-*.xml'
      archiveArtifacts 'target/*.jar'
   }
   stage('déploiement'){
       // Agent ssh doit être configuré pour l'authentification avec clés (générées par ssh-keygen): http://localhost:8080/job/pipe1/pipeline-syntax/
       sshagent(['prod-server']) {
        // sh 'ssh -o StrictHostKeyChecking=no lpi@10.0.2.2 cat /etc/os-release'
        sh 'scp -o StrictHostKeyChecking=no -r target/*.jar lpi@10.0.2.2:/tmp/'

}
   }
}
